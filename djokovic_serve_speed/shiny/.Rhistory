# -- Plot the Densities
source("~/Documents/Github/serve_speeds/djokovic_serve_speed/src/plot_speed_density.R")
plot_servespeed_density(djokovic_ao_20,
'Novak Djokovic',
tournament = 'ausopen',
year = 2020)
# -- Plot the Densities
source("~/Documents/Github/serve_speeds/djokovic_serve_speed/src/plot_speed_density.R")
plot_servespeed_density(djokovic_ao_20,
"Novak Djokovic's Serve Speeds \nAustralian Open 2020",
tournament = 'ausopen',
year = 2020)
plot_servespeed_density(djokovic_ao_19,
"Novak Djokovic's Serve Speeds \nAustralian Open 2019",
tournament = 'ausopen',
year = 2019)
table(djokovic_ao_20$match_id)
table(djokovic_ao_19$match_id)
View(djokovic_ao_19)
# -- Win percentages
djokovic_ao_20 %>%
group_by(ServeNumber) %>%
summarise(service_pts = n(),
service_wins = sum(won_point),
win_perc = sum(won_point)/n())
353/438
djokovic_ao_19 %>%
group_by(ServeNumber) %>%
summarise(service_pts = n(),
service_wins = sum(won_point),
win_perc = sum(won_point)/n())
table(djokovic_ao_19$match_id)
knitr::opts_chunk$set(echo = TRUE)
source("/Users/petertea/Documents/Sports-Analytics/Serve Speeds/Create_serve_plots.R")
source("/Users/petertea/Documents/Sports-Analytics/Serve Speeds/Tennis_Collection_functions.R")
### 2019 Aus Open
NJ_2019_Aus <- get_slam_serve(Player = "Novak Djokovic",
year = 2019, tournament = "ausopen")
View(NJ_2019_Aus)
table(NJ_2019_Aus$match_id)
table(djokovic_ao_19$match_id)
View(djokovic_ao_19)
plot_servespeed_density(djokovic_ao_19,
"Novak Djokovic's Serve Speeds \nAustralian Open 2019",
tournament = 'ausopen',
year = 2019)
plot_servespeed_density(djokovic_ao_20,
"Novak Djokovic's Serve Speeds \nAustralian Open 2020",
tournament = 'ausopen',
year = 2020)
plot_servespeed_density(djokovic_ao_18,
"Novak Djokovic's Serve Speeds \nAustralian Open 2018",
tournament = 'ausopen',
year = 2018)
plot_servespeed_density(djokovic_ao_19,
"Novak Djokovic's Serve Speeds \nAustralian Open 2019",
tournament = 'ausopen',
year = 2019)
plot_servespeed_density(djokovic_ao_20,
"Novak Djokovic's Serve Speeds \nAustralian Open 2020",
tournament = 'ausopen',
year = 2020)
installed.packages('ggridges')
install.packages('ggridges')
colnames(djokovic_ao_20)
ggplot(djokovic_ao_20, aes(x = Speed_KMh, y = SetNo)) + geom_density_ridges()
ggplot(djokovic_ao_20, aes(x = Speed_KMh, y = SetNo)) + ggridges::geom_density_ridges()
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = SetNo)) + ggridges::geom_density_ridges()
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = SetNo)) +
ggridges::geom_density_ridges2()
library(ggridges)
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = SetNo)) +
geom_density_ridges2()
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = SetNo, group = SetNo)) +
geom_density_ridges()
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = ServeNumber, group = ServeNumber)) +
geom_density_ridges()
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 1)
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 0.6)
ggplot(djokovic_ao_20, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 1.6)
djokovic_ao_18$year
djokovic_data <- do.call("rbind", list(djokovic_ao_18,
djokovic_ao_19,
djokovic_ao_20))
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 1.6) + facet_grid(year)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 1.6) + facet_grid(~year)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(ServeNumber),
group = as.factor(ServeNumber))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~year)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~ServeNumber)
djokovic_data <- djokovic_data %>%
filter(Speed_KMH > 0)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year),
fill = stat(x))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~ServeNumber)
) +
) +
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year), fill = stat(x),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6) + facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year), fill = factor(stat(quantile)),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
group = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2,
aes(alpha = 0.2)) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year))) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2,
aes(alpha = 0.2)) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
djokovic_1st_serve <- djokovic_data %>%
filter(ServeNumber == 1)
djokovic_2nd_serve <- djokovic_data %>%
filter(ServeNumber == 2)
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
####                GET THE CLEANED DATA                   ####
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
#--> Get Sackmann speed and play-by-play data
source("~/Documents/Github/serve_speeds/src/collect_speed_data_functions.R")
# collect data from AO 2018 - 2020
djokovic_ao_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'ausopen')
djokovic_ao_19 <- get_slam_data('Novak Djokovic',
year = 2019,
tournament = 'ausopen')
djokovic_ao_20 <- get_slam_data('Novak Djokovic',
year = 2020,
tournament = 'ausopen')
colnames(djokovic_ao_20)
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
####                GET THE CLEANED DATA                   ####
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
#--> Get Sackmann speed and play-by-play data
source("~/Documents/Github/serve_speeds/src/collect_speed_data_functions.R")
# collect data from AO 2018 - 2020
djokovic_ao_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'ausopen')
djokovic_ao_19 <- get_slam_data('Novak Djokovic',
year = 2019,
tournament = 'ausopen')
djokovic_ao_20 <- get_slam_data('Novak Djokovic',
year = 2020,
tournament = 'ausopen')
djokovic_data <- do.call("rbind", list(djokovic_ao_18,
djokovic_ao_19,
djokovic_ao_20))
djokovic_data <- djokovic_data %>%
filter(Speed_KMH > 0)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
djokovic_1st_serve <- djokovic_data %>%
filter(ServeNumber == 1)
djokovic_2nd_serve <- djokovic_data %>%
filter(ServeNumber == 2)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(grouped_score),
fill = as.factor(grouped_score), alpha = 0.2)) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~year)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 0.6,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_1st_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
dim(djokovic_ao_18)
dim(djokovic_ao_19)
dim(djokovic_ao_20)
plot_servespeed_density(djokovic_ao_19,
"Novak Djokovic's Serve Speeds \nAustralian Open 2019",
tournament = 'ausopen',
year = 2019)
plot_servespeed_density(djokovic_ao_20,
"Novak Djokovic's Serve Speeds \nAustralian Open 2020",
tournament = 'ausopen',
year = 2020)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.6,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.2,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
ggplot(djokovic_data, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.0,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
# collect data from US 2018 - 2020
djokovic_us_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'usopen')
djokovic_us_19 <- get_slam_data('Novak Djokovic',
year = 2019,
tournament = 'usopen')
djokovic_us_20 <- get_slam_data('Novak Djokovic',
year = 2020,
tournament = 'usopen')
plot_servespeed_density(djokovic_us_18,
"Novak Djokovic's Serve Speeds \nUS Open 2018",
tournament = 'usopen',
year = 2018)
plot_servespeed_density(djokovic_us_19,
"Novak Djokovic's Serve Speeds \nUS Open 2019",
tournament = 'usopen',
year = 2019)
djokovic_us <- do.call("rbind", list(djokovic_us_18,
djokovic_us_19
))
djokovic_us <- djokovic_us %>%
filter(Speed_KMH > 0)
ggplot(djokovic_us, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.0,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
djokovic_us_1st_serve <- djokovic_us %>%
filter(ServeNumber == 1)
djokovic_us_2nd_serve <- djokovic_us %>%
filter(ServeNumber == 2)
ggplot(djokovic_us_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
tie_break = FALSE
!tie_break
2 %%2
table(djokovic_data$current_score)
# -- Non-Tie break scores
non_tie_break <- c(15,30,40)
4 %in% non_tie_break
15 %in% non_tie_break
# -- Speed on Ad court vs. Deuce court
source("~/Documents/Github/serve_speeds/src/ad_or_deuce_court.R")
djokovic_data$court_side <- mapply(djokovic_data$server_score,
djokovic_data$returner_score,
FUN = ad_or_deuce)
point_number <- function(score){
point_num <- ifelse(score == 0, 0,
ifelse(score == 15, 1,
score == 30, 2,
ifelse(score == 40, 3, score)))
return(point_num)
}
point_number(15)
point_number <- function(score){
point_num <- ifelse(score == 0, 0,
ifelse(score == 15, 1,
ifelse(score == 30, 2,
ifelse(score == 40, 3, score)
)
)
)
return(point_num)
}
point_number(15)
point_number(40)
# -- Speed on Ad court vs. Deuce court
source("~/Documents/Github/serve_speeds/src/ad_or_deuce_court.R")
djokovic_data$court_side <- mapply(djokovic_data$server_score,
djokovic_data$returner_score,
FUN = ad_or_deuce)
View(djokovic_data)
djokovic_1st_serve <- djokovic_data %>%
filter(ServeNumber == 1)
djokovic_2nd_serve <- djokovic_data %>%
filter(ServeNumber == 2)
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
# -- 2nd serves by serve side
ggplot(djokovic_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~court_side)
table(djokovic_2nd_serve$returner)
# -- 2nd serves by serve side
ggplot(djokovic_2nd_serve %>% filter(returner != 'D. Shapovalov'), aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~court_side)
# -- 1st serves by serve side
ggplot(djokovic_1st_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~court_side)
plot_servespeed_density(djokovic_us_18,
"Novak Djokovic's Serve Speeds \nUS Open 2018",
tournament = 'usopen',
year = 2018)
plot_servespeed_density(djokovic_us_19,
"Novak Djokovic's Serve Speeds \nUS Open 2019",
tournament = 'usopen',
year = 2019)
# collect data from US 2018 - 2020
djokovic_us_17 <- get_slam_data('Novak Djokovic',
year = 2017,
tournament = 'usopen')
djokovic_us_17
# collect data from US 2018 - 2020
djokovic_us_17 <- get_slam_data('Novak Djokovic',
year = 2017,
tournament = 'usopen')
# collect data from WIM 2018 - 2020
djokovic_wim_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'wimbledon')
djokovic_wim_19 <- get_slam_data('Novak Djokovic',
year = 2019,
tournament = 'wimbledon')
plot_servespeed_density(djokovic_wim_18,
"Novak Djokovic's Serve Speeds \nWimbledon 2018",
tournament = 'wimbledon',
year = 2018)
plot_servespeed_density(djokovic_wim_19,
"Novak Djokovic's Serve Speeds \nWimbledon 2019",
tournament = 'wimbledon',
year = 2019)
djokovic_wim <- do.call("rbind", list(djokovic_wim_18,
djokovic_wim_19
))
djokovic_wim <- djokovic_wim %>%
filter(Speed_KMH > 0)
ggplot(djokovic_wim, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.0,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~ServeNumber)
djokovic_wim_1st_serve <- djokovic_wim %>%
filter(ServeNumber == 1)
djokovic_wim_2nd_serve <- djokovic_wim %>%
filter(ServeNumber == 2)
ggplot(djokovic_wim_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_wim_2nd_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.0,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
ggplot(djokovic_wim_1st_serve, aes(x = Speed_KMH, y = as.factor(year),
fill = as.factor(year), alpha = 0.2)) +
geom_density_ridges(scale = 1.1,
quantile_lines = TRUE, quantiles = 2) +
facet_grid(~grouped_score)
# -- load libraries
library(dplyr)
library(ggplot2)
library(reshape2)
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
####                GET THE CLEANED DATA                   ####
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
#--> Get Sackmann speed and play-by-play data
source("~/Documents/Github/serve_speeds/src/collect_speed_data_functions.R")
# collect data from AO 2018 - 2020
djokovic_ao_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'ausopen')
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
####                GET THE CLEANED DATA                   ####
# ----- # ----- # -----  # -----  # -----  #  -----  # -----  #
#--> Get Sackmann speed and play-by-play data
source("~/Documents/Github/serve_speeds/src/collect_speed_data_functions.R")
# collect data from AO 2018 - 2020
djokovic_ao_18 <- get_slam_data('Novak Djokovic',
year = 2018,
tournament = 'ausopen')
View(djokovic_ao_18)
tournament_list <- c('ausopen', 'usopen', 'frenchopen', 'wimbledon')
year_list <- c(2018, 2019)
djokovic_data_list <- list()
index = 1
for(year in year_list){
for(tournament in tournament_list){
djokovic_data_list[[index]] <- get_slam_data('Novak Djokovic',
year = year,
tournament = tournament)
index = index + 1
}
}
djokovic_data_list[[9]] <- get_slam_data('Novak Djokovic',
year = 2020,
tournament = 'ausopen')
djokovic_data <- do.call("rbind", djokovic_data_list)
djokovic_data <- djokovic_data %>%
filter(Speed_KMH > 0)
View(djokovic_data)
library(dplyr)
library(ggplot2)
library(reshape2)
#--> Get Sackmann speed and play-by-play data
source("~/Documents/Github/serve_speeds/src/collect_speed_data_functions.R")
tournament_list <- c('ausopen', 'usopen', 'frenchopen', 'wimbledon')
year_list <- c(2018, 2019)
djokovic_data_list <- list()
index = 1
for(year in year_list){
for(tournament in tournament_list){
djokovic_data_list[[index]] <- get_slam_data('Novak Djokovic',
year = year,
tournament = tournament)
index = index + 1
}
}
djokovic_data_list[[9]] <- get_slam_data('Novak Djokovic',
year = 2020,
tournament = 'ausopen')
djokovic_data <- do.call("rbind", djokovic_data_list)
djokovic_data <- djokovic_data %>%
filter(Speed_KMH > 0)
djokovic_data <- do.call("rbind", djokovic_data_list)
write.csv(djokovic_data,
'~/Documents/Github/serve_speeds/djokovic_serve_speed/shiny/djokovic.csv',
row.names = FALSE)
install.packages("shinydashboard")
library(shinydashboard)
djokovic_data <- read.csv('djokovic.csv')
setwd("~/Documents/GitHub/serve_speeds/djokovic_serve_speed/shiny")
djokovic_data <- read.csv('djokovic.csv')
djokovic_data$tournament
levels(djokovic_data$tournament)
